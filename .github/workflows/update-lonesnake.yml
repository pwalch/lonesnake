name: Check and Update Lonesnake Version

on:
  schedule:
    - cron: "0 4 * * *" # Runs daily at 04:00 UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 requests

      - name: Get current prog version
        id: current_version
        run: |
          current_prog_version="$(./release.py current-prog-version)"
          echo "Current version of lonesnake: ${current_prog_version}"
          echo "current_prog_version=${current_prog_version}" >> $GITHUB_OUTPUT

      - name: Check for updates
        id: check_updates
        run: |
          new_updates_output="$(./release.py is-new-update-available)"
          has_new_updates=0
          if [[ "$new_updates_output" =~ "NO UPDATE AVAILABLE" ]]; then
            echo "No update available"
          else
            echo "$new_updates_output"
            has_new_updates=1
          fi
          echo "has_new_updates=$has_new_updates" >> $GITHUB_OUTPUT

      - name: Get next prog version
        id: next_version
        if: steps.check_updates.outputs.has_new_updates == 1
        run: |
          next_prog_version="$(./release.py next-prog-version)"
          echo "Next version will be: $next_prog_version"
          echo "next_prog_version=$next_prog_version" >> $GITHUB_OUTPUT

      - name: Update patch block and prog version
        if: steps.check_updates.outputs.has_new_updates == 1
        run: |
          ./release.py overwrite-latest-patch-block
          ./release.py overwrite-prog-version ${{ steps.next_version.outputs.next_prog_version }}

      - name: Create branch and commit changes
        if: steps.check_updates.outputs.has_new_updates == 1
        run: |
          branch_name="version-update/$(date -u +%Y%m%d-%H%M-UTC)"
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -b "$branch_name"
          git add README.md lonesnake helpers/lonesnake-kit
          git commit -m "Update lonesnake from ${{ steps.current_version.outputs.current_prog_version }} to ${{ steps.next_version.outputs.next_prog_version }}"
          git push origin "$branch_name"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
        id: create_branch

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              owner,
              repo,
              title: 'Update lonesnake version to ${process.env.NEXT_VERSION} with new CPython versions',
              body: `Automated update of Lonesnake from ${process.env.CURRENT_VERSION} to ${process.env.NEXT_VERSION}`,
              head: process.env.BRANCH_NAME,
              base: 'main'
            });
            console.log(`Pull Request created: ${result.data.html_url}`);
        env:
          CURRENT_VERSION: ${{ steps.current_version.outputs.current_prog_version }}
          NEXT_VERSION: ${{ steps.next_version.outputs.next_prog_version }}
          BRANCH_NAME: ${{ steps.create_branch.outputs.branch_name }}
